import{_ as a,c as n,o as p,ag as e}from"./chunks/framework.Bee44SUS.js";const u=JSON.parse('{"title":"Termux+Ubuntu+SSH+SFTP+Swift+Code-Server","description":"","frontmatter":{},"headers":[],"relativePath":"src/玩机/Termux+Ubuntu+SSH+SFTP+Swift+Code-Server.md","filePath":"src/玩机/Termux+Ubuntu+SSH+SFTP+Swift+Code-Server.md","lastUpdated":1758099352000}'),t={name:"src/玩机/Termux+Ubuntu+SSH+SFTP+Swift+Code-Server.md"};function i(l,s,o,c,d,r){return p(),n("div",null,[...s[0]||(s[0]=[e(`<h1 id="termux-ubuntu-ssh-sftp-swift-code-server" tabindex="-1">Termux+Ubuntu+SSH+SFTP+Swift+Code-Server <a class="header-anchor" href="#termux-ubuntu-ssh-sftp-swift-code-server" aria-label="Permalink to &quot;Termux+Ubuntu+SSH+SFTP+Swift+Code-Server&quot;">​</a></h1><h2 id="android-termux-运行linux系统" tabindex="-1">Android Termux 运行Linux系统 <a class="header-anchor" href="#android-termux-运行linux系统" aria-label="Permalink to &quot;Android Termux 运行Linux系统&quot;">​</a></h2><h2 id="安装termux" tabindex="-1">安装Termux <a class="header-anchor" href="#安装termux" aria-label="Permalink to &quot;安装Termux&quot;">​</a></h2><p>通过<strong>F-Droid</strong>或者<strong>Github</strong>下载安装Termux</p><h3 id="更新termux源" tabindex="-1">更新Termux源 <a class="header-anchor" href="#更新termux源" aria-label="Permalink to &quot;更新Termux源&quot;">​</a></h3><p>使用清华镜像源：<a href="https://mirrors.tuna.tsinghua.edu.cn/help/termux/" target="_blank" rel="noreferrer">https://mirrors.tuna.tsinghua.edu.cn/help/termux/</a> 直接输入一下命令更新源：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sed -i &#39;s@^\\(deb.*stable main\\)$@#\\1\\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/apt/termux-main stable main@&#39; $PREFIX/etc/apt/sources.list</span></span></code></pre></div><p>更新源:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>apt update &amp;&amp; apt upgrade</span></span></code></pre></div><p>提供访问手机存储权限：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>termux-setup-storage</span></span></code></pre></div><h1 id="termux安装并运行ftp-ssh服务" tabindex="-1">Termux安装并运行ftp，ssh服务 <a class="header-anchor" href="#termux安装并运行ftp-ssh服务" aria-label="Permalink to &quot;Termux安装并运行ftp，ssh服务&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pkg install pure-ftpd</span></span>
<span class="line"><span>pure-ftpd --bind 8000</span></span></code></pre></div><p>快速启动脚本:sftpgo-start.sh</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#!/usr/bin/env bash </span></span>
<span class="line"><span></span></span>
<span class="line"><span># termux安装并运行ftp服务</span></span>
<span class="line"><span># 安装并运行pure-ftpd</span></span>
<span class="line"><span># pkg install pure-ftpd</span></span>
<span class="line"><span># pure-ftpd - -bind 8000</span></span>
<span class="line"><span></span></span>
<span class="line"><span>clear</span></span>
<span class="line"><span>echo &quot;Termux pure-ftpd服务启动中.......</span></span>
<span class="line"><span>Termux SSH正在启动......</span></span>
<span class="line"><span>Termux SSH端口:8022</span></span>
<span class="line"><span>Termux SSH用户名:termux</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Termux FTP正在启动......</span></span>
<span class="line"><span>Termux FTP端口:8000</span></span>
<span class="line"><span>&quot;</span></span>
<span class="line"><span>pure-ftpd --bind 8000 &amp;</span></span></code></pre></div><h1 id="termux安装linux" tabindex="-1">Termux安装Linux <a class="header-anchor" href="#termux安装linux" aria-label="Permalink to &quot;Termux安装Linux&quot;">​</a></h1><p>安装基础件proot-distro：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> pkg install proot-distro</span></span></code></pre></div><p>或者</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>apt install proot-distro</span></span></code></pre></div><p>查看proot-distro的使用帮助为：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>proot-distro help</span></span></code></pre></div><p>可以查看可安装的Linux系统:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>proot-distro list</span></span></code></pre></div><p>安装以上系统就简单了：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>proot-distro install &lt;alias&gt;</span></span></code></pre></div><p>比如，我要安装ubuntu 22.04，指令为：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>proot-distro install ubuntu</span></span></code></pre></div><p>不同的版本安装名称可能不同，输入proot-distro list显示的可安装alias名称即可。</p><p>安装完成后，进入 Linux发行版环境的指令为，比如我安装的ubuntu为：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>proot-distro login ubuntu</span></span></code></pre></div><p>如果认为每次进入 ubuntu的命令太长，可以在 Termux 环境新建一个sh文件，比如新建start-ubunt22.sh。 vim start-ubunt22.sh 编辑内容并保存:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>proot-distro login ubuntu</span></span></code></pre></div><p>启动：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>./start-ubunt22.sh</span></span></code></pre></div><p>就进入了真正的linux环境了。之后，传统操作比如换源，安装软件等等，一条龙走起来吧。 输入exit可以退出登录的linux系统： 自此Termux安装Linux步骤完毕。</p><h1 id="ubuntu-初始化" tabindex="-1">Ubuntu 初始化 <a class="header-anchor" href="#ubuntu-初始化" aria-label="Permalink to &quot;Ubuntu 初始化&quot;">​</a></h1><h3 id="换源" tabindex="-1">换源 <a class="header-anchor" href="#换源" aria-label="Permalink to &quot;换源&quot;">​</a></h3><p>如果速度不行，可以换成清华镜像源： <a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu-ports/" target="_blank" rel="noreferrer">https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu-ports/</a> 然后</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>apt update &amp;&amp; apt upgrade</span></span></code></pre></div><h3 id="安装中文" tabindex="-1">安装中文 <a class="header-anchor" href="#安装中文" aria-label="Permalink to &quot;安装中文&quot;">​</a></h3><ol><li>安装中文支持包language-pack-zh-hans：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt-get install language-pack-zh-hans</span></span></code></pre></div><ol start="2"><li>修改： vim /etc/environment (在文件的末尾追加):</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>LANG=&quot;zh_CN.UTF-8&quot;</span></span>
<span class="line"><span>LANGUAGE=&quot;zh_CN:zh:en_US:en&quot;</span></span></code></pre></div><ol start="3"><li>再修改: vim /var/lib/locales/supported.d/local (没有这个文件就新建，同样在末尾追加)：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>en_US.UTF-8 UTF-8</span></span>
<span class="line"><span>zh_CN.UTF-8 UTF-8</span></span>
<span class="line"><span>zh_CN.GBK GBK</span></span>
<span class="line"><span>zh_CN GB2312</span></span></code></pre></div><p>最后，执行命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo locale-gen</span></span></code></pre></div><p>对于中文乱码是空格的情况，安装中文字体解决:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt-get install fonts-droid-fallback ttf-wqy-zenhei ttf-wqy-microhei fonts-arphic-ukai fonts-arphic-uming</span></span></code></pre></div><h3 id="安装openssh-server" tabindex="-1">安装openssh-server <a class="header-anchor" href="#安装openssh-server" aria-label="Permalink to &quot;安装openssh-server&quot;">​</a></h3><p>命令:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>apt install openssh-server</span></span></code></pre></div><p>修改配置:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>vim /etc/ssh/sshd_config</span></span></code></pre></div><p>修改端口 <br> 查找：#Port 22 <br> 修改为: Port 2222 <br> 注意： 端口最好是4位数即以上的端口号，否则容易造成ssh启动失败，这儿Termux上Linux存在的问题。 <br><br> 支持root用户 <br> 查找：#PermitRootLogin prohibit-password 或者 #PermitRootLogin yes <br> 修改为:PermitRootLogin yes <br><br> 支持密码认证 <br> 查找：#PasswordAuthentication yes <br> 修改为:PasswordAuthentication yes</p><p>启动ssh:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>service ssh start | stop | restart</span></span>
<span class="line"><span>或者:</span></span>
<span class="line"><span>/usr/sbin/sshd</span></span></code></pre></div><p>通过命令查看ssh是否启动成功:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ps -e | grep ssh</span></span></code></pre></div><p>连接ssh：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ssh -p 2222 root@192.168.1.111</span></span>
<span class="line"><span>或者</span></span>
<span class="line"><span>ssh -p 2222 192.168.1.111</span></span>
<span class="line"><span>免密登录后可以</span></span>
<span class="line"><span>ssh 192.168.1.111</span></span></code></pre></div><p>参考: <a href="https://docs.andronix.app/ssh/ssh-basics/#ssh-via-linux" target="_blank" rel="noreferrer">https://docs.andronix.app/ssh/ssh-basics/#ssh-via-linux</a></p><h3 id="要重新生成openssh-server服务器的主机密钥-您可以按照以下步骤进行操作" tabindex="-1">要重新生成openssh-server服务器的主机密钥，您可以按照以下步骤进行操作： <a class="header-anchor" href="#要重新生成openssh-server服务器的主机密钥-您可以按照以下步骤进行操作" aria-label="Permalink to &quot;要重新生成openssh-server服务器的主机密钥，您可以按照以下步骤进行操作：&quot;">​</a></h3><p>/etc/ssh/ssh_host_rsa_key /etc/ssh/ssh_host_ecdsa_key<br> /etc/ssh/ssh_host_ed25519_key</p><ol><li>先删除旧的主机密钥文件：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo rm /etc/ssh/ssh_host_*</span></span></code></pre></div><ol start="2"><li>然后重新生成新的主机密钥，这将会创建新的RSA、ECDSA和ED25519密钥文件：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo dpkg-reconfigure openssh-server</span></span></code></pre></div><p>这将会删除旧的主机密钥并重新生成新的密钥文件/etc/ssh/ssh_host_rsa_key、/etc/ssh/ssh_host_ecdsa_key 和 /etc/ssh/ssh_host_ed25519_key。在此过程中，可能会提示您接受一些默认的配置选项。 <br><br> 注意：在执行这些步骤之前，请确保您有权限访问系统以及相应的sudo权限。重新生成密钥后，所有以前连接到该服务器的客户端都将看到一个关于主机密钥已更改的警告，要求验证新的密钥指纹。这是正常的，是SSH为了保护您的连接不受中间人攻击而采取的安全措施。</p><h3 id="ssh免密登录" tabindex="-1">SSH免密登录 <a class="header-anchor" href="#ssh免密登录" aria-label="Permalink to &quot;SSH免密登录&quot;">​</a></h3><h4 id="创建密钥-使用下面命令生成公私密钥" tabindex="-1">创建密钥, 使用下面命令生成公私密钥 <a class="header-anchor" href="#创建密钥-使用下面命令生成公私密钥" aria-label="Permalink to &quot;创建密钥, 使用下面命令生成公私密钥&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ssh-keygen -t rsa</span></span></code></pre></div><h4 id="将公钥添加到远程服务器认证列表" tabindex="-1">将公钥添加到远程服务器认证列表 <a class="header-anchor" href="#将公钥添加到远程服务器认证列表" aria-label="Permalink to &quot;将公钥添加到远程服务器认证列表&quot;">​</a></h4><p>方式1：直接使用命令</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ssh-copy-id -i ~/.ssh/android-liunx.pub root@192.168.1.111 -p 2222</span></span>
<span class="line"><span>-p 2222: 标识ssh使用自定义端口</span></span></code></pre></div><p>方式2：直接拷贝android-liunx.pub公钥</p><ol><li>将xxx.pub 上传到远程服务器</li><li>使用下列命令添加远程服务器认证</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cat ~/home/android-liunx.pub &gt;&gt; ~/.ssh/authorized_keys</span></span></code></pre></div><p>退出主机，即可发现已经能够免认证访问主机。 免密登录:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ssh -p 2222 root@192.168.1.111</span></span></code></pre></div><h4 id="添加快捷登录方式" tabindex="-1">添加快捷登录方式 <a class="header-anchor" href="#添加快捷登录方式" aria-label="Permalink to &quot;添加快捷登录方式&quot;">​</a></h4><p>进入客户机，编辑下面文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>vim ~./ssh/config</span></span></code></pre></div><p>添加如下示例:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Host 192.168.1.111									#自定义别名</span></span>
<span class="line"><span>	HostName 192.168.1.111							#主机</span></span>
<span class="line"><span>	User root										#用户</span></span>
<span class="line"><span>	Port 2222										#端口</span></span>
<span class="line"><span>	IdentityFile /Users/kimi/.ssh/android-liunx 	#私钥</span></span></code></pre></div><p>接下来就可以使用快捷命令: ssh name</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ssh 192.168.1.111</span></span></code></pre></div><p>参考: <a href="https://www.jianshu.com/p/974f9e164c6e/" target="_blank" rel="noreferrer">https://www.jianshu.com/p/974f9e164c6e/</a><a href="https://zhuanlan.zhihu.com/p/73024008" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/73024008</a></p><h3 id="安装sqlite3" tabindex="-1">安装sqlite3 <a class="header-anchor" href="#安装sqlite3" aria-label="Permalink to &quot;安装sqlite3&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt-get install sqlite3</span></span>
<span class="line"><span>sudo apt-get install libsqlite3-dev</span></span></code></pre></div><h2 id="sftpgo安装与配置-sftp-ftp-webdav" tabindex="-1">SFTPGO安装与配置: SFTP, FTP WebDAV <a class="header-anchor" href="#sftpgo安装与配置-sftp-ftp-webdav" aria-label="Permalink to &quot;SFTPGO安装与配置: SFTP, FTP WebDAV&quot;">​</a></h2><p>使用SFTPGO的原因：vsftp和openssh-server中的sftp总是配置不成功，而导致无法使用。</p><h3 id="安装sftpgo" tabindex="-1">安装sftpgo <a class="header-anchor" href="#安装sftpgo" aria-label="Permalink to &quot;安装sftpgo&quot;">​</a></h3><ol><li>首先，通过在终端中运行以下命令，确保所有系统包都是最新的。</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt update &amp; apt upgrade</span></span>
<span class="line"><span>sudo apt install curl gnupg2 gnupg wget</span></span></code></pre></div><ol start="2"><li>在 Ubuntu 22.04 上安装 SFTPGo 默认情况下，SFTPGo 在 Ubuntu 22.04 基础存储库中不可用。现在运行以下命令将 SFTPGo PPA 存储库添加到您的 Ubuntu 系统：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo add-apt-repository ppa:sftpgo/sftpgo</span></span></code></pre></div><p>如果出现:sudo: add-apt-repository：找不到命令 需要安装:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt-get install software-properties-common</span></span></code></pre></div><p>启用存储库后，现在使用以下命令安装最新版本的 SFTPGo：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt update</span></span>
<span class="line"><span>sudo apt install sftpgo</span></span></code></pre></div><h3 id="sftpgo配置" tabindex="-1">sftpgo配置 <a class="header-anchor" href="#sftpgo配置" aria-label="Permalink to &quot;sftpgo配置&quot;">​</a></h3><p>sftpgo配置文件:/etc/sftpgo/sftpgo.json</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>vim /etc/sftpgo/sftpgo.json</span></span></code></pre></div><p>配置：sftp，ftp，webdav 打开/etc/sftpgo/sftpgo.json找到对应的位置分别配置sftp，ftp，webdav服务</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sftp: 2022</span></span>
<span class="line"><span>sftpd.bindings.port = 2022</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ftp: 2021</span></span>
<span class="line"><span>ftpd.bindings.port = 2021</span></span>
<span class="line"><span></span></span>
<span class="line"><span>webdav: 2020</span></span>
<span class="line"><span>webdavd.bindings.port = 2020</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#web 管理 默认8080</span></span>
<span class="line"><span>httpd.bindings.port = 2000</span></span></code></pre></div><p>sftpgo配置完毕，进入<code>http://localhost:2000</code> 的Users下创建账号即可使用S/FTP,WEBDAV等服务了。</p><h3 id="sftpgo-启动和停止" tabindex="-1">sftpgo 启动和停止 <a class="header-anchor" href="#sftpgo-启动和停止" aria-label="Permalink to &quot;sftpgo 启动和停止&quot;">​</a></h3><p>为了方便使用写了两个启动和停止sftpgo服务的脚本</p><p>启动sftpgo： sftpgo-start.sh</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#!/usr/bin/env bash </span></span>
<span class="line"><span>start()</span></span>
<span class="line"><span>{	</span></span>
<span class="line"><span>	mkdir -p /root/.config/sftpgo</span></span>
<span class="line"><span>	cd /root/.config/sftpgo</span></span>
<span class="line"><span>	sftpgo serve</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>echo &quot;开启sftpgo服务&quot;</span></span>
<span class="line"><span>echo &quot;sftpgo config: /etc/sftpgo/sftpgo.json&quot;</span></span>
<span class="line"><span>echo &quot;sftpgo sftp port: 2022&quot;</span></span>
<span class="line"><span>echo &quot;sftpgo ftp port: 2021&quot;</span></span>
<span class="line"><span>echo &quot;sftpgo webdav port: 2020&quot;</span></span>
<span class="line"><span>echo &quot;sftpgo manage web: http://localhost:8080&quot;</span></span>
<span class="line"><span>start </span></span>
<span class="line"><span>##</span></span>
<span class="line"><span>## 如果使用 start 启动可以不需要sftpgo-stop停止服务，直接结束当前终端即可。</span></span>
<span class="line"><span>## 使用 start &amp; 启动则可以终止当前终端，停止服务需要sftpgo-stop命令。</span></span>
<span class="line"><span>##</span></span></code></pre></div><p>停止sftpgo服务: sftpgo-stop.sh</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#!/usr/bin/env bash </span></span>
<span class="line"><span></span></span>
<span class="line"><span>## 关闭sftpgo服务</span></span>
<span class="line"><span>stop()</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>	#KillPort脚本需要拷贝到/usr/local/bin/</span></span>
<span class="line"><span>	#在arm Linux上无法跑</span></span>
<span class="line"><span>	#KillPort 8080</span></span>
<span class="line"><span>	list=$(ps -a | grep sftpgo)</span></span>
<span class="line"><span>	for var in \${list[@]};</span></span>
<span class="line"><span>	do</span></span>
<span class="line"><span>	    echo $var</span></span>
<span class="line"><span>	    kill -9 $var</span></span>
<span class="line"><span>	    break</span></span>
<span class="line"><span>	done</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>echo &quot;关闭sftpgo服务&quot;</span></span>
<span class="line"><span>echo &quot;如果无法关闭可以使用下列命令，查找对应的进程号&quot;</span></span>
<span class="line"><span>echo &#39;进程检测命令: echo $(ps -a | grep sftpgo) &#39;</span></span>
<span class="line"><span>echo &#39;进程检测命令: echo $(ps -ax | grep sftpgo) &#39;</span></span>
<span class="line"><span>echo &#39;进程检测命令: echo $(ps -axu | grep sftpgo) &#39;</span></span>
<span class="line"><span>stop </span></span>
<span class="line"><span>echo</span></span></code></pre></div><p>创建软连接方便直接调用</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo ln -s /opt/script/sftpgo-start.sh /usr/local/bin/sftpgo-start</span></span>
<span class="line"><span>sudo ln -s /opt/script/sftpgo-stop.sh /usr/local/bin/sftpgo-stop</span></span></code></pre></div><p>现在可直接使用命令:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sftpgo-start  </span></span>
<span class="line"><span>sftpgo-stop</span></span></code></pre></div><p>参考连接: <br><a href="https://www.xtuos.com/6091.html" target="_blank" rel="noreferrer">https://www.xtuos.com/6091.html</a> <br><a href="https://cloud.tencent.com/developer/article/2021019" target="_blank" rel="noreferrer">https://cloud.tencent.com/developer/article/2021019</a> <br><a href="https://blog.csdn.net/qq_45661358/article/details/126580800" target="_blank" rel="noreferrer">https://blog.csdn.net/qq_45661358/article/details/126580800</a></p><h1 id="桌面与vnc" tabindex="-1">桌面与VNC <a class="header-anchor" href="#桌面与vnc" aria-label="Permalink to &quot;桌面与VNC&quot;">​</a></h1><p>可以通过<strong>AnLinux</strong>应用提供的命令安装桌面与VNC LXQT这个左面比较好看，可以安装试试。</p><p>桌面安装至少需要500MB甚至更多的控件，如果不需要可以不安装，直接使用SSH即可。</p><h1 id="备份" tabindex="-1">备份 <a class="header-anchor" href="#备份" aria-label="Permalink to &quot;备份&quot;">​</a></h1><p>到这儿通过Termux安装Ubuntu已经完成，这儿可以进行一个系统的备份，防止误操作。 备份命令:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>proot-distro backup ubuntu --output ubuntu22.0.4.backup</span></span></code></pre></div><p>恢复:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>proot-distro restore ubuntu22.0.4.backup</span></span></code></pre></div><h1 id="swift-安装" tabindex="-1">Swift 安装 <a class="header-anchor" href="#swift-安装" aria-label="Permalink to &quot;Swift 安装&quot;">​</a></h1><p>Swift安装环境参考: <br><a href="https://www.swift.org/download/" target="_blank" rel="noreferrer">https://www.swift.org/download/</a> <br> Arm Swift下载: <br><a href="https://github.com/futurejones/swift-arm64/releases" target="_blank" rel="noreferrer">https://github.com/futurejones/swift-arm64/releases</a> <br> Ubuntu-22.0.4: <br><a href="https://download.swift.org/swift-5.7-release/ubuntu2204-aarch64/swift-5.7-RELEASE/swift-5.7-RELEASE-ubuntu22.04-aarch64.tar.gz" target="_blank" rel="noreferrer">https://download.swift.org/swift-5.7-release/ubuntu2204-aarch64/swift-5.7-RELEASE/swift-5.7-RELEASE-ubuntu22.04-aarch64.tar.gz</a></p><h3 id="linux-swift-安装需要环境" tabindex="-1">Linux Swift 安装需要环境: <a class="header-anchor" href="#linux-swift-安装需要环境" aria-label="Permalink to &quot;Linux Swift 安装需要环境:&quot;">​</a></h3><p>Ubuntu 18.04</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>apt-get install \\</span></span>
<span class="line"><span>          binutils \\</span></span>
<span class="line"><span>          git \\</span></span>
<span class="line"><span>          libc6-dev \\</span></span>
<span class="line"><span>          libcurl4 \\</span></span>
<span class="line"><span>          libedit2 \\</span></span>
<span class="line"><span>          libgcc-5-dev \\</span></span>
<span class="line"><span>          libpython2.7 \\</span></span>
<span class="line"><span>          libsqlite3-0 \\</span></span>
<span class="line"><span>          libstdc++-5-dev \\</span></span>
<span class="line"><span>          libxml2 \\</span></span>
<span class="line"><span>          pkg-config \\</span></span>
<span class="line"><span>          tzdata \\</span></span>
<span class="line"><span>          zlib1g-dev</span></span></code></pre></div><p>Ubuntu 20.04</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>apt-get install \\</span></span>
<span class="line"><span>          binutils \\</span></span>
<span class="line"><span>          git \\</span></span>
<span class="line"><span>          gnupg2 \\</span></span>
<span class="line"><span>          libc6-dev \\</span></span>
<span class="line"><span>          libcurl4 \\</span></span>
<span class="line"><span>          libedit2 \\</span></span>
<span class="line"><span>          libgcc-9-dev \\</span></span>
<span class="line"><span>          libpython2.7 \\</span></span>
<span class="line"><span>          libsqlite3-0 \\</span></span>
<span class="line"><span>          libstdc++-9-dev \\</span></span>
<span class="line"><span>          libxml2 \\</span></span>
<span class="line"><span>          libz3-dev \\</span></span>
<span class="line"><span>          pkg-config \\</span></span>
<span class="line"><span>          tzdata \\</span></span>
<span class="line"><span>          uuid-dev \\</span></span>
<span class="line"><span>          zlib1g-dev</span></span></code></pre></div><p>Ubuntu 22.04</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>apt-get install \\</span></span>
<span class="line"><span>          binutils \\</span></span>
<span class="line"><span>          git \\</span></span>
<span class="line"><span>          gnupg2 \\</span></span>
<span class="line"><span>          libc6-dev \\</span></span>
<span class="line"><span>          libcurl4-openssl-dev \\</span></span>
<span class="line"><span>          libedit2 \\</span></span>
<span class="line"><span>          libgcc-9-dev \\</span></span>
<span class="line"><span>          libpython3.8 \\</span></span>
<span class="line"><span>          libsqlite3-0 \\</span></span>
<span class="line"><span>          libstdc++-9-dev \\</span></span>
<span class="line"><span>          libxml2-dev \\</span></span>
<span class="line"><span>          libz3-dev \\</span></span>
<span class="line"><span>          pkg-config \\</span></span>
<span class="line"><span>          tzdata \\</span></span>
<span class="line"><span>          unzip \\</span></span>
<span class="line"><span>          zlib1g-dev</span></span></code></pre></div>`,137)])])}const g=a(t,[["render",i]]);export{u as __pageData,g as default};
