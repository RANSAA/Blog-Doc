import{_ as a,c as e,o as t,ag as p}from"./chunks/framework.Bee44SUS.js";const h=JSON.parse('{"title":"1. 添加 PostgreSQL 存储库","description":"","frontmatter":{},"headers":[],"relativePath":"src/Linux/Ubuntu22.04安装PostgreSQL 16 教程.md","filePath":"src/Linux/Ubuntu22.04安装PostgreSQL 16 教程.md","lastUpdated":1758099352000}'),n={name:"src/Linux/Ubuntu22.04安装PostgreSQL 16 教程.md"};function o(l,s,i,d,r,g){return t(),e("div",null,[...s[0]||(s[0]=[p(`<h1 id="_1-添加-postgresql-存储库" tabindex="-1">1. 添加 PostgreSQL 存储库 <a class="header-anchor" href="#_1-添加-postgresql-存储库" aria-label="Permalink to &quot;1. 添加 PostgreSQL 存储库&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo sh -c &#39;echo &quot;deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main&quot; &gt; /etc/apt/sources.list.d/pgdg.list&#39;</span></span></code></pre></div><h1 id="_2-导入-postgresql-gpg-密钥" tabindex="-1">2. 导入 PostgreSQL GPG 密钥 <a class="header-anchor" href="#_2-导入-postgresql-gpg-密钥" aria-label="Permalink to &quot;2. 导入 PostgreSQL GPG 密钥&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -</span></span></code></pre></div><h1 id="_3-更新软件包列表" tabindex="-1">3. 更新软件包列表 <a class="header-anchor" href="#_3-更新软件包列表" aria-label="Permalink to &quot;3. 更新软件包列表&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt-get update</span></span></code></pre></div><h1 id="_4-安装-postgresql-16" tabindex="-1">4. 安装 PostgreSQL 16 <a class="header-anchor" href="#_4-安装-postgresql-16" aria-label="Permalink to &quot;4. 安装 PostgreSQL 16&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt-get install postgresql-16 postgresql-contrib-16</span></span></code></pre></div><h1 id="_5-初始化-postgresql" tabindex="-1">5. 初始化 PostgreSQL <a class="header-anchor" href="#_5-初始化-postgresql" aria-label="Permalink to &quot;5. 初始化 PostgreSQL&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/usr/lib/postgresql/16/bin/initdb --username=postgres --pwprompt -D /opt/db/postgresql/16/database/postgres --waldir=/opt/db/postgresql/16/log</span></span></code></pre></div><p>其中：</p><ol><li><p><strong>/opt/db/postgresql/16/database/postgres</strong>:为自定义的数据库存储目录</p></li><li><p><strong>/opt/db/postgresql/16/log</strong>：为自定义的日志目录</p></li><li><p><strong>postgres</strong> ：为用户名称</p></li><li><p><strong>--pwprompt</strong>：表示将 postgres设置为超级用户</p></li></ol><h1 id="_6-允许postgresql远程访问配置" tabindex="-1">6. 允许PostgreSQL远程访问配置 <a class="header-anchor" href="#_6-允许postgresql远程访问配置" aria-label="Permalink to &quot;6. 允许PostgreSQL远程访问配置&quot;">​</a></h1><ol><li><p>修改<strong>postgresql.conf</strong>文件： 找到<strong>listen_addresses</strong>设置项，并将其值设置为 <code>&#39;*&#39;</code>，这将允许外部连接。例如：<code>listen_addresses = &#39;*&#39;</code></p></li><li><p>修改<strong>pg_hba.conf</strong>文件： 在文件的末尾添加一行允许外部 IP 地址或网段连接的记录。例如，允许所有 IP 地址连接，你可以添加一行： <code>host all all 0.0.0.0/0 md5</code> 或者在**IPv4 local connections:<strong>处添加一行: <code>host all all 0.0.0.0/0 @authmethodhost@</code> 其中</strong>@authmethodhost@<strong>为认证模式，可以根据原始的配置中添加相同的配置； 例如可以同时向</strong>IPv4 local connections:**处添加两条记录：</p></li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>host    all             all             0.0.0.0/0	            trust</span></span>
<span class="line"><span>host    all             all             0.0.0.0/0	            md5</span></span></code></pre></div><h1 id="_7-启动-postgresql数据库服务" tabindex="-1">7. 启动 PostgreSQL数据库服务 <a class="header-anchor" href="#_7-启动-postgresql数据库服务" aria-label="Permalink to &quot;7. 启动 PostgreSQL数据库服务&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/usr/lib/postgresql/16/bin/pg_ctl -D /opt/db/postgresql/16/database/postgres -l /opt/db/postgresql/16/启动日志.log start</span></span></code></pre></div><h1 id="_8-终止-postgresql数据库服务" tabindex="-1">8. 终止 PostgreSQL数据库服务 <a class="header-anchor" href="#_8-终止-postgresql数据库服务" aria-label="Permalink to &quot;8. 终止 PostgreSQL数据库服务&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/usr/lib/postgresql/16/bin/pg_ctl -D /opt/db/postgresql/16/database/postgres stop</span></span></code></pre></div><h1 id="_9-创建新的数据库" tabindex="-1">9. 创建新的数据库 <a class="header-anchor" href="#_9-创建新的数据库" aria-label="Permalink to &quot;9. 创建新的数据库&quot;">​</a></h1><p>为了在PostgreSQL 16中创建一个名为&quot;epg&quot;的数据库以及一个名为&quot;epg&quot;的用户名，并且把密码设置为&quot;123456&quot;，你可以按照以下的步骤来进行操作：</p><p>1、首先通过postgres用户来登录到PostgreSQL：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>psql --username=postgres</span></span>
<span class="line"><span></span></span>
<span class="line"><span>或者：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>psql -U postgres</span></span></code></pre></div><p>作用：以超级用户 postgres 的身份登录 PostgreSQL 的命令行界面 psql。 <br> postgres 是 PostgreSQL 安装时默认的超级用户，拥有对数据库的完全控制权限。 <br> 因为你在初始化数据库时创建的超级用户是&quot;postgres&quot;，所以请使用这个用户来登录。<br> 第二部，你将看到一个以 postgres=# 结尾的提示符，在提示符后面输入下面的命令来创建一个新的用户。<br> 2、接下来在提示符出现后，输入下面的SQL命令来创建一个新的用户，把名字设置为&quot;epg&quot;，并且密码设置为&quot;123456&quot;：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE USER epg WITH PASSWORD &#39;123456&#39;;</span></span></code></pre></div><p>3、然后，继续在提示符后面，输入下面的SQL命令来创建一个新的数据库，名字是&quot;epg&quot;：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CREATE DATABASE epg;</span></span></code></pre></div><p>4、为了把新创建的数据库&quot;epg&quot;的权限赋予给新创建的用户&quot;epg&quot;，请输入以下SQL命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>GRANT ALL PRIVILEGES ON DATABASE epg TO epg;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>注意：该步骤也可以不执行，直接执行下面的步骤6,7</span></span></code></pre></div><p>作用：将数据库 epg 的所有权限授予用户 epg。<br> 这个命令会把所有的权限都赋予给&quot;epg&quot;用户，这样&quot;epg&quot;用户就可以在&quot;epg&quot;数据库中进行所有的操作了。<br> 注意：创建指定数据库(如epg)时，可以不将数据库的所有权限授予用户(如epg用户)<br> 5、最后，直接按Ctrl + D或者输入 \\q 来退出PostgreSQL操作终端。<br> 6、使用postgres用户连接epg数据库</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>psql --username=postgres --dbname=epg</span></span></code></pre></div><p>7、将数据库(epg)的所有者(Owner)设置为指定用户(epg)</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER SCHEMA public OWNER TO epg;</span></span></code></pre></div><p>8、最后，直接按Ctrl + D或者输入 \\q 来退出PostgreSQL操作终端。</p><h1 id="_10-删除数据库" tabindex="-1">10. 删除数据库 <a class="header-anchor" href="#_10-删除数据库" aria-label="Permalink to &quot;10. 删除数据库&quot;">​</a></h1><p>在PostgreSQL 16中中删除一个名为epg的数据库 1、首先通过postgres用户来登录到PostgreSQL：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>psql --username=postgres</span></span>
<span class="line"><span></span></span>
<span class="line"><span>或者：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>psql -U postgres</span></span></code></pre></div><p>2、 删除epg数据库 删除PostgreSQL数据库，你可以使用以下命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DROP DATABASE epg;</span></span></code></pre></div><p>这个命令需要有足够的权限才能执行。通常只有数据库管理员或数据库所有者可以删除数据库。 如果要通过命令行工具删除数据库，​可以使用下面的命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>dropdb epg</span></span></code></pre></div><p>同样，执行这个命令也需要有相应的权限。</p><h1 id="_11-如何让外部链接数据库时必须输入正确的密码才能连接-否接拒绝" tabindex="-1">11. 如何让外部链接数据库时必须输入正确的密码才能连接，否接拒绝 <a class="header-anchor" href="#_11-如何让外部链接数据库时必须输入正确的密码才能连接-否接拒绝" aria-label="Permalink to &quot;11. 如何让外部链接数据库时必须输入正确的密码才能连接，否接拒绝&quot;">​</a></h1><p>要求外部连接到PostgreSQL数据库必须输入正确的密码，你需要修改两个配置文件： pg_hba.conf 和 postgresql.conf。<br> 首先，找到postgresql.conf配置文件（通常位于PostgreSQL的数据目录下），你需要在该文件中启用监听所有地址，即在该文件中将listen_addresses参数设置为&#39;*&#39;。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 在postgresql.conf文件中</span></span>
<span class="line"><span>listen_addresses = &#39;*&#39;</span></span></code></pre></div><p>保存并关闭该文件。<br> 接下来，你需要编辑PostgreSQL的pg_hba.conf配置文件，该文件控制PostgreSQL的客户端验证和连接策略。<br> 这个文件位于PostgreSQL的数据目录中，且名为pg_hba.conf。<br> 你需要为想要远程访问数据库的IP地址（或IP地址范围）添加一行内容，类似下面这样：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 为指定的IP地址允许访问所有数据库</span></span>
<span class="line"><span># &quot;md5&quot;表示需使用md5密码验证（你还可以选择其他的验证方法，如 &quot;password&quot;，它表示在通信过程中使用明文密码）</span></span>
<span class="line"><span>host    all             all             192.168.1.0/24            md5</span></span></code></pre></div><p>这一行表示允许192.168.1.0到192.168.1.255的所有IP地址使用md5密码验证方式连接到服务器的所有数据库。<br> 如果允许所有ip，则可以这样设置:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>host    all             all             0.0.0.0/0           md5</span></span></code></pre></div><p>当然，你也可以只允许特定的用户连接到特定的数据库。例如，如果你想让只有用户&#39;epg&#39;可以连接到&#39;mydb&#39;数据库，你可以这样写：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>host    mydb            epg             192.168.1.0/24            md5</span></span></code></pre></div><p>保存并关闭pg_hba.conf文件。<br> 完成以上步骤后，你需要重启PostgreSQL服务以使新的配置生效。具体重启命令视你的操作系统和PostgreSQL的安装方式而定，常见的是sudo service postgresql restart。<br> 现在，所有的远程连接都需要提供正确的密码才能访问数据库。<br> 注意：以上操作需要具备适当的权限。如果你在操作过程中遇到问题，请再次询问。</p>`,52)])])}const u=a(n,[["render",o]]);export{h as __pageData,u as default};
