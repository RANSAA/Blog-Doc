import{_ as s,c as n,o as e,ag as o}from"./chunks/framework.Bee44SUS.js";const h=JSON.parse('{"title":"发布个人开源框架到CocoaPods","description":"","frontmatter":{},"headers":[],"relativePath":"src/iOS/CocoaPods/发布个人开源框架到CocoaPods.md","filePath":"src/iOS/CocoaPods/发布个人开源框架到CocoaPods.md","lastUpdated":1758099352000}'),p={name:"src/iOS/CocoaPods/发布个人开源框架到CocoaPods.md"};function t(r,a,c,i,l,d){return e(),n("div",null,[...a[0]||(a[0]=[o(`<h1 id="发布个人开源框架到cocoapods" tabindex="-1">发布个人开源框架到CocoaPods <a class="header-anchor" href="#发布个人开源框架到cocoapods" aria-label="Permalink to &quot;发布个人开源框架到CocoaPods&quot;">​</a></h1><p><strong>主题</strong>：如何让自己的项目支持CocoaPods,将自己的开源框架发布到CocoaPods上呢！<br><strong>准备工作</strong>：项目要托管到github上面，并且需要有Release版本，准备好之后就可以按下面的步骤进行操作！<br><strong>PS</strong>:一切与CDN trunk 相关的错误可以先在hosts文件中添加：<br> 199.232.4.133 raw.githubusercontent.com <br><em><strong>准备工作：添加hosts文件</strong></em></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># GitHub Start</span></span>
<span class="line"><span>#199.232.4.133 raw.githubusercontent.com</span></span>
<span class="line"><span>151.101.76.133 raw.githubusercontent.com</span></span>
<span class="line"><span>52.74.223.119 github.com</span></span>
<span class="line"><span>192.30.253.119 gist.github.com</span></span>
<span class="line"><span>54.169.195.247 api.github.com</span></span>
<span class="line"><span>185.199.111.153 assets-cdn.github.com</span></span>
<span class="line"><span>151.101.108.133 user-images.githubusercontent.com</span></span>
<span class="line"><span>151.101.76.133 gist.githubusercontent.com</span></span>
<span class="line"><span>151.101.76.133 cloud.githubusercontent.com</span></span>
<span class="line"><span>151.101.76.133 camo.githubusercontent.com</span></span>
<span class="line"><span>151.101.76.133 avatars0.githubusercontent.com</span></span>
<span class="line"><span>151.101.76.133 avatars1.githubusercontent.com</span></span>
<span class="line"><span>151.101.76.133 avatars2.githubusercontent.com</span></span>
<span class="line"><span>151.101.76.133 avatars3.githubusercontent.com</span></span>
<span class="line"><span>151.101.76.133 avatars4.githubusercontent.com</span></span>
<span class="line"><span>151.101.76.133 avatars5.githubusercontent.com</span></span>
<span class="line"><span>151.101.76.133 avatars6.githubusercontent.com</span></span>
<span class="line"><span>151.101.76.133 avatars7.githubusercontent.com</span></span>
<span class="line"><span>151.101.76.133 avatars8.githubusercontent.com</span></span>
<span class="line"><span># GitHub End</span></span></code></pre></div><h2 id="第一步-创建podspec" tabindex="-1">第一步：创建podspec <a class="header-anchor" href="#第一步-创建podspec" aria-label="Permalink to &quot;第一步：创建podspec&quot;">​</a></h2><blockquote><p>进入项目工作目录 cd xx/xx， 使用：pod spec create name 创建podspec文件。</p></blockquote><h2 id="第二步-编辑podspec-具体的可以查看podspec语法" tabindex="-1">第二步：编辑podspec（具体的可以查看Podspec语法） <a class="header-anchor" href="#第二步-编辑podspec-具体的可以查看podspec语法" aria-label="Permalink to &quot;第二步：编辑podspec（具体的可以查看Podspec语法）&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>name = &quot;TKPermissionKit&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Pod::Spec.new do |spec|</span></span>
<span class="line"><span>  spec.name         = &quot;TKPermissionKit&quot;   #框架名称</span></span>
<span class="line"><span>  spec.version      = &quot;1.0&quot;         #版本</span></span>
<span class="line"><span>  spec.summary      = &quot;权限管理工具&quot;          #简短的描述</span></span>
<span class="line"><span>  spec.description  = &lt;&lt;-DESC</span></span>
<span class="line"><span>                      在这儿可以对框架进行详细描述</span></span>
<span class="line"><span>                   DESC                     #详细的描述</span></span>
<span class="line"><span>  spec.homepage     = &quot;https://github.com/RANSAA/TKPermissionKit&quot;   #github项目首页</span></span>
<span class="line"><span>  spec.license      = &quot;MIT&quot;     #开源协议方式</span></span>
<span class="line"><span>  spec.author       = { &quot;sayaDev&quot; =&gt; &quot;1352892108@qq.com&quot; }    #作者</span></span>
<span class="line"><span>  spec.platform     = :ios, &quot;8.0&quot;         #支持版本</span></span>
<span class="line"><span>  spec.source       = { :git =&gt; &quot;https://github.com/RANSAA/TKPermissionKit.git&quot;, :tag =&gt; &quot;#{spec.version}&quot; }  #对应github资源与版本</span></span>
<span class="line"><span>  spec.source_files  =  &quot;TKPermissionKit/*.{h,m}&quot;   #源文件路径相关，可添加多个路径如：&quot;TKPermissionKit/*.{h,m}&quot;, &quot;TKPermissionKit/xx/&quot;</span></span>
<span class="line"><span>  spec.frameworks = &quot;Foundation&quot;, &quot;UIKit&quot;   #引入的系统框架</span></span>
<span class="line"><span>  spec.requires_arc = true    #支持arc</span></span>
<span class="line"><span>  spec.source_files         = &quot;#{name}/TKPermissionKit.h&quot;  #如果有多层级资源，直接在后面追加以&quot;,&quot;分隔即可</span></span>
<span class="line"><span>  spec.public_header_files  = &quot;#{name}/TKPermissionKit.h&quot;</span></span>
<span class="line"><span>end</span></span></code></pre></div><h2 id="第三步-检验podspec文件是否正确" tabindex="-1">第三步：检验podspec文件是否正确 <a class="header-anchor" href="#第三步-检验podspec文件是否正确" aria-label="Permalink to &quot;第三步：检验podspec文件是否正确&quot;">​</a></h2><blockquote><p>使用命令： pod lib lint <br> 或(输出校验信息) <br> pod lib lint --verbose <br> pod lib lint --no-clean --verbose <br> 或(添加了三方静态依赖库) <br> pod lib lint --verbose --use-libraries <br> 如果出现CDN: trunk相关错误可以使用下面的命令：<br> pod lib lint --no-clean --sources=<a href="https://github.com/CocoaPods/Specs.git" target="_blank" rel="noreferrer">https://github.com/CocoaPods/Specs.git</a> <br> 或者： <br> pod lib lint --no-clean --sources=<a href="https://cdn.cocoapods.org" target="_blank" rel="noreferrer">https://cdn.cocoapods.org</a> <br> 命令说明：<br> --verbose：显示检查编译的详细信息 <br> --no-clean：不清除校验产生的数据 <br> --allow-warnings ：验证时允许有警告 <br> --use-libraries：依赖了三方静态framework库时添加</p></blockquote><h6 id="注意-xcode12中会生成模拟器arm64架构-与真机arm64不同-pod验证时会出现模拟器与真机arm64链接错误。" tabindex="-1">注意：xcode12中会生成模拟器arm64架构(与真机arm64不同)，pod验证时会出现模拟器与真机arm64链接错误。 <a class="header-anchor" href="#注意-xcode12中会生成模拟器arm64架构-与真机arm64不同-pod验证时会出现模拟器与真机arm64链接错误。" aria-label="Permalink to &quot;注意：xcode12中会生成模拟器arm64架构(与真机arm64不同)，pod验证时会出现模拟器与真机arm64链接错误。&quot;">​</a></h6><h6 id="解决方法" tabindex="-1">解决方法： <a class="header-anchor" href="#解决方法" aria-label="Permalink to &quot;解决方法：&quot;">​</a></h6><p>方法一：添加跳过架构检测命令（不推荐）</p><blockquote><p>--skip-import-validation</p></blockquote><p>方法二：直接配置podspec文件 (推荐)</p><blockquote><p>参数解释：移出模拟器构建中的arm64架构；<br><code>spec.xcconfig = { &#39;EXCLUDED_ARCHS[sdk=iphonesimulator*]&#39; =&gt; &#39;arm64&#39;}</code></p><p>项目优化：在SDK项目中设置Build Settings -&gt; Excluded Architectures -&gt;Release中选择Any iOS Simulator SDK -&gt; 添加arm64。可以排除模拟器arm64位架构生成。</p></blockquote><p><strong>附加：</strong> 解决不同平台同种架构无法共存的最好的方法就是使用<strong>XCFramework</strong></p><p>其它相关命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pod lib lint （从本地验证你的pod能否通过验证）</span></span>
<span class="line"><span>pod spec lint （从本地和远程验证你的pod能否通过验证）</span></span>
<span class="line"><span></span></span>
<span class="line"><span>pod lib lint --verbose （加--verbose可以显示详细的检测过程，出错时会显示详细的错误信息）</span></span>
<span class="line"><span>pod lib lint --no-clean --verbose  (--no-clean不清除验证时的编译项目信息)</span></span>
<span class="line"><span>pod lib lint --allow-warnings (允许警告，用来解决由于代码中存在警告导致不能通过校验的问题)</span></span>
<span class="line"><span>pod lib lint --help （查看所有可选参数，可选参数可以加多个）</span></span>
<span class="line"><span>pod lib lint --skip-import-validation （跳过引用其它framework时的架构检测）</span></span></code></pre></div><h2 id="第四步-获取令牌-注册trunk" tabindex="-1">第四步：获取令牌（注册Trunk） <a class="header-anchor" href="#第四步-获取令牌-注册trunk" aria-label="Permalink to &quot;第四步：获取令牌（注册Trunk）&quot;">​</a></h2><blockquote><p>使用：pod trunk register <a href="mailto:1352892108@qq.com" target="_blank" rel="noreferrer">1352892108@qq.com</a> sayaDev<br> 作用：获取令牌信息，验证邮箱中的链接，就可以向cocoaPods推送 <br> PS: <br> 如果你的pod是由多人维护的，你也可以添加其他维护者: <br> 添加作者：pod trunk add-owner 框架名称 <a href="mailto:other@qq.com" target="_blank" rel="noreferrer">other@qq.com</a> <br> 移出作者：pod trunk remove-owner 框架名称 <a href="mailto:other@qq.com" target="_blank" rel="noreferrer">other@qq.com</a></p></blockquote><h2 id="第五步-检查当前邮箱有多少个框架-可跳过" tabindex="-1">第五步：检查当前邮箱有多少个框架（可跳过） <a class="header-anchor" href="#第五步-检查当前邮箱有多少个框架-可跳过" aria-label="Permalink to &quot;第五步：检查当前邮箱有多少个框架（可跳过）&quot;">​</a></h2><blockquote><p>使用：pod trunk me <br> 如果在这一步出现了CDN: trunk相关错误，那么在host文件中添加： <br> 199.232.4.133 raw.githubusercontent.com</p></blockquote><h2 id="第六步-将框架推送到cocoapods" tabindex="-1">第六步：将框架推送到Cocoapods <a class="header-anchor" href="#第六步-将框架推送到cocoapods" aria-label="Permalink to &quot;第六步：将框架推送到Cocoapods&quot;">​</a></h2><blockquote><p>使用：pod trunk push</p></blockquote><h2 id="第七步-更新pod" tabindex="-1">第七步：更新pod <a class="header-anchor" href="#第七步-更新pod" aria-label="Permalink to &quot;第七步：更新pod&quot;">​</a></h2><blockquote><p>使用：pod setup</p></blockquote><h2 id="第八步-如果该框架无法更新到最新版" tabindex="-1">第八步：如果该框架无法更新到最新版 <a class="header-anchor" href="#第八步-如果该框架无法更新到最新版" aria-label="Permalink to &quot;第八步：如果该框架无法更新到最新版&quot;">​</a></h2><blockquote><p>第一步：open ~/Library/Caches/CocoaPods <br> 第二步：将目录中所有与本框架有关的文件全部删除 <br> 第三步：先删除Podfile.lock文件，再pod install 或者 pod update 即可，</p><p>或者直接更新<em><strong>repo</strong></em>： <br> 更新cocoapods：pod repo update <br> 更新trunk ：pod repo update trunk</p></blockquote><h2 id="后续-如果推送成功之后搜索不到的解决方法" tabindex="-1">后续，如果推送成功之后搜索不到的解决方法： <a class="header-anchor" href="#后续-如果推送成功之后搜索不到的解决方法" aria-label="Permalink to &quot;后续，如果推送成功之后搜索不到的解决方法：&quot;">​</a></h2><blockquote><p>先：rm ~/Library/Caches/CocoaPods/search_index.json <br> 在： pod search xxx <br> PS：<a href="https://blog.csdn.net/Felicity294250051/article/details/53924210" target="_blank" rel="noreferrer">https://blog.csdn.net/Felicity294250051/article/details/53924210</a></p></blockquote><p>删除：将已经发布到Cocoapods的框架移出</p><blockquote><p>pod trunk delete TKPermissionKit 1.0</p></blockquote><p>\\</p><h2 id="其它" tabindex="-1">其它：\\ <a class="header-anchor" href="#其它" aria-label="Permalink to &quot;其它：\\&quot;">​</a></h2><p>CocoaPods使用指南:<a href="https://guides.cocoapods.org/making/specs-and-specs-repo.html" target="_blank" rel="noreferrer">https://guides.cocoapods.org/making/specs-and-specs-repo.html</a> <br> Podspec Syntax Reference：<a href="https://guides.cocoapods.org/syntax/podspec.html" target="_blank" rel="noreferrer">https://guides.cocoapods.org/syntax/podspec.html</a> <br> 引用:<a href="https://blog.csdn.net/sinat_31807529/article/details/80486589" target="_blank" rel="noreferrer">https://blog.csdn.net/sinat_31807529/article/details/80486589</a> <br> CocoaPods更新: 直接<code>sudo gem install cocoapods</code></p><p><strong>注意</strong>：如果在操作CocoaPods时，频繁出现CDN问题而无法解决时，可以使用CocoaPods-1.7.5即之前的版本</p><h2 id="附加检测框架pod导入的文件结构" tabindex="-1">附加检测框架pod导入的文件结构 <a class="header-anchor" href="#附加检测框架pod导入的文件结构" aria-label="Permalink to &quot;附加检测框架pod导入的文件结构&quot;">​</a></h2><blockquote><p>先在你的框架项目中新建一个TKPermissionKitTest项目，和podspec文件处与同一级目录 再在TKPermissionKitTest中创建Podfile文件，然后查看框架结构即可 Podfile文件内容如下：</p></blockquote><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>target &#39;TKPermissionKitTest&#39; do</span></span>
<span class="line"><span>  # Comment the next line if you don&#39;t want to use dynamic frameworks</span></span>
<span class="line"><span>  use_frameworks!</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  pod &#39;TKPermissionKit&#39; , :path =&gt; &quot;../&quot;</span></span>
<span class="line"><span>end</span></span></code></pre></div>`,39)])])}const b=s(p,[["render",t]]);export{h as __pageData,b as default};
