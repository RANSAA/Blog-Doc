import{_ as r,c as e,o as t,ag as i}from"./chunks/framework.Bee44SUS.js";const h=JSON.parse('{"title":"Site-Music站点说明","description":"","frontmatter":{},"headers":[],"relativePath":"src/Netfity/Site-Music站点说明.md","filePath":"src/Netfity/Site-Music站点说明.md","lastUpdated":1758099352000}'),s={name:"src/Netfity/Site-Music站点说明.md"};function n(p,a,l,o,c,u){return t(),e("div",null,[...a[0]||(a[0]=[i(`<h1 id="site-music站点说明" tabindex="-1">Site-Music站点说明 <a class="header-anchor" href="#site-music站点说明" aria-label="Permalink to &quot;Site-Music站点说明&quot;">​</a></h1><p>用于存放我的音乐的站点</p><h1 id="说明-项目使用netlify静态部署" tabindex="-1">说明：项目使用Netlify静态部署 <a class="header-anchor" href="#说明-项目使用netlify静态部署" aria-label="Permalink to &quot;说明：项目使用Netlify静态部署&quot;">​</a></h1><h1 id="警告" tabindex="-1">警告 <a class="header-anchor" href="#警告" aria-label="Permalink to &quot;警告&quot;">​</a></h1><pre><code>对于一些特殊字符不同的平台处理方式不一样，所以会出现看起来一样的字符，但是它们却是不一样的字符。
</code></pre><p>因为Mac平台的默认字符集为Unicode，在处理一些特殊字符时会自动追加对应的组合字符，Windows平台不会添加，这就某些字符看起来相同但实际上却是不同字符的原因。 由于Netlify CLI在Mac和Windows平台下处理路径是有区别的，Mac上对某些特殊字符会添加对应的组合字符。 所以：在Windows上使用Netlify CLI上传的项目访问资源路径时须使用带 「.win」的请求路径。在Mac上上传的项目访问资源路径时使用正常的访问接口即可。</p><pre><code>注意：这儿特指url路径中的字符
</code></pre><h1 id="上传平台-windows" tabindex="-1">上传平台：Windows <a class="header-anchor" href="#上传平台-windows" aria-label="Permalink to &quot;上传平台：Windows&quot;">​</a></h1><p>如果整个项目很大，并且文件也很多，并且存储在NTFS分区上时，一般在Windows上面部署项目，因为黑苹果读取NTFS上的数据时容易出错。 Windows：使用带「.win」的API资源访问路径 Mac：使用不带「.win」的API资源访问路径</p><h1 id="请求接口" tabindex="-1">请求接口 <a class="header-anchor" href="#请求接口" aria-label="Permalink to &quot;请求接口&quot;">​</a></h1><p>请求路径：<br><a href="https://ranstar-music.netlify.app/api/music.json" target="_blank" rel="noreferrer">https://ranstar-music.netlify.app/api/music.json</a> <br><a href="https://ranstar-music.netlify.app/api/music.full.json" target="_blank" rel="noreferrer">https://ranstar-music.netlify.app/api/music.full.json</a> <br><a href="https://ranstar-music.netlify.app/api/music.win.json" target="_blank" rel="noreferrer">https://ranstar-music.netlify.app/api/music.win.json</a> <br><a href="https://ranstar-music.netlify.app/api/music.full.win.json" target="_blank" rel="noreferrer">https://ranstar-music.netlify.app/api/music.full.win.json</a> <br><a href="https://ranstar-music.netlify.app/api/music.group.json" target="_blank" rel="noreferrer">https://ranstar-music.netlify.app/api/music.group.json</a> <br><a href="https://ranstar-music.netlify.app/api/music.group.full.json" target="_blank" rel="noreferrer">https://ranstar-music.netlify.app/api/music.group.full.json</a> <br><a href="https://ranstar-music.netlify.app/api/music.group.win.json" target="_blank" rel="noreferrer">https://ranstar-music.netlify.app/api/music.group.win.json</a> <br><a href="https://ranstar-music.netlify.app/api/music.group.full.win.json" target="_blank" rel="noreferrer">https://ranstar-music.netlify.app/api/music.group.full.win.json</a></p><h1 id="api" tabindex="-1">api <a class="header-anchor" href="#api" aria-label="Permalink to &quot;api&quot;">​</a></h1><p>关于api接口资源的具体接口可以直接查看对应的资源文件即可</p>`,13)])])}const m=r(s,[["render",n]]);export{h as __pageData,m as default};
