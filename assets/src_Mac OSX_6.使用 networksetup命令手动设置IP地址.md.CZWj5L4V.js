import{_ as s,c as e,o as t,ag as n}from"./chunks/framework.Bee44SUS.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"src/Mac OSX/6.使用 networksetup命令手动设置IP地址.md","filePath":"src/Mac OSX/6.使用 networksetup命令手动设置IP地址.md","lastUpdated":1758099352000}'),p={name:"src/Mac OSX/6.使用 networksetup命令手动设置IP地址.md"};function i(l,a,o,d,c,h){return t(),e("div",null,[...a[0]||(a[0]=[n(`<h2 id="使用背景" tabindex="-1">使用背景 <a class="header-anchor" href="#使用背景" aria-label="Permalink to &quot;使用背景&quot;">​</a></h2><p>由于在使用macOS Monterey 12.7.5时，想通过系统设置来设置网络的静态IP地址时，发现无法设置，每次设置的时候无法手动输入IP地址，并且只要准备输入就会卡住，并且风扇狂转，最后通过多种渠道知道可以通过命令的方式设置IP地址相关信息。</p><h2 id="使用-networksetup命令-永久生效" tabindex="-1">使用 networksetup命令（永久生效） <a class="header-anchor" href="#使用-networksetup命令-永久生效" aria-label="Permalink to &quot;使用 networksetup命令（永久生效）&quot;">​</a></h2><p>这是 macOS 官方提供的网络配置工具，其效果与在图形界面中修改完全一致，配置会永久保存。</p><h3 id="_1-查看所有网络接口" tabindex="-1">1. 查看所有网络接口 <a class="header-anchor" href="#_1-查看所有网络接口" aria-label="Permalink to &quot;1. 查看所有网络接口&quot;">​</a></h3><p>首先，你需要知道要修改的接口的准确名称。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>networksetup -listallnetifaces</span></span></code></pre></div><p>输出示例：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>An asterisk (*) denotes that a network service is disabled.</span></span>
<span class="line"><span>Ethernet Address: 00:1A:2B:3C:4D:5E (en0)</span></span>
<span class="line"><span>Ethernet Address: 88:00:00:00:00:00 (en1)</span></span></code></pre></div><p>常见的接口名：</p><ul><li>en0: 通常是内置以太网（有线网卡）或主要的无线网卡。</li><li>en1: 通常是无线网卡（Wi-Fi）或第二个有线接口。</li></ul><h3 id="_1-1-使用dhcp方式动态设置ip地址" tabindex="-1">1.1 使用DHCP方式动态设置IP地址 <a class="header-anchor" href="#_1-1-使用dhcp方式动态设置ip地址" aria-label="Permalink to &quot;1.1 使用DHCP方式动态设置IP地址&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo networksetup -setdhcp &quot;USB WIFI&quot;</span></span></code></pre></div><h3 id="_2-使用dhcp-手动设置地址-方式设置ip地址" tabindex="-1">2. 使用DHCP(手动设置地址)方式设置IP地址 <a class="header-anchor" href="#_2-使用dhcp-手动设置地址-方式设置ip地址" aria-label="Permalink to &quot;2. 使用DHCP(手动设置地址)方式设置IP地址&quot;">​</a></h3><p>语法</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo networksetup -setmanualwithdhcprouter &lt;网络服务名称&gt; &lt;IP地址&gt;</span></span></code></pre></div><p><strong>示例</strong>：将USB WIFI的IP地址设置为192.168.1.77</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo networksetup -setmanualwithdhcprouter &quot;USB WIFI&quot; 192.168.1.77</span></span></code></pre></div><p>参数说明：</p><ul><li>-setmanualwithdhcprouter：使用DHCP(手动设置地址)方式设置IP地址</li><li>USB WIFI：需要设置IP地址的网络服务名称，该名称可以由用户自己设定，系统偏好设置-&gt;网络-&gt;网络名称</li><li>192.168.1.77 需要设置的IP地址</li></ul><p><strong>注意</strong>： 使用DHCP(手动设置地址)方式只需要设置IP地址即可。</p><h3 id="_3-手动设置静态-ip-地址" tabindex="-1">3. 手动设置静态 IP 地址 <a class="header-anchor" href="#_3-手动设置静态-ip-地址" aria-label="Permalink to &quot;3. 手动设置静态 IP 地址&quot;">​</a></h3><p>语法：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo networksetup -setmanual &lt;网络服务名称&gt; &lt;IP地址&gt; &lt;子网掩码&gt; &lt;路由器地址&gt;</span></span></code></pre></div><p>​<strong>示例​</strong>：将 en2（添加的USB WiFi）的 IP 设置为 192.168.1.77，子网掩码 255.255.255.0，网关 192.168.1.1</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo networksetup -setmanual &quot;USB WIFI&quot; 192.168.1.77 255.255.255.0 192.168.1.1</span></span></code></pre></div><p>参数说明：</p><ul><li>-setmanual：通过手动的方式设置IP地址</li><li>USB WIFI：需要设置IP地址的网络服务名称，该名称可以由用户自己设定，系统偏好设置-&gt;网络-&gt;网络名称</li><li>192.168.1.77：需要设置的IP地址</li><li>255.255.255.0：子网掩码</li><li>192.168.1.1：路由器地址</li></ul><h3 id="_4-手动设置-dns-服务器" tabindex="-1">4.手动设置 DNS 服务器 <a class="header-anchor" href="#_4-手动设置-dns-服务器" aria-label="Permalink to &quot;4.手动设置 DNS 服务器&quot;">​</a></h3><p>语法：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo networksetup -setdnsservers &lt;网络服务名称&gt; &lt;DNS1地址&gt; [DNS2地址]...</span></span></code></pre></div><p><strong>示例</strong>​：为 en0设置 DNS 为 8.8.8.8和 1.1.1.1</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo networksetup -setdnsservers en0 8.8.8.8 1.1.1.1</span></span></code></pre></div><h3 id="_5-切换回-dhcp-自动获取-ip" tabindex="-1">5. 切换回 DHCP（自动获取 IP） <a class="header-anchor" href="#_5-切换回-dhcp-自动获取-ip" aria-label="Permalink to &quot;5. 切换回 DHCP（自动获取 IP）&quot;">​</a></h3><p>如果您想改回自动获取 IP，可以使用以下命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo networksetup -setdhcp &lt;网络服务名称&gt;</span></span></code></pre></div><p>示例​：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo networksetup -setdhcp en0</span></span></code></pre></div><h3 id="_6-清空-dns-设置-恢复为自动获取" tabindex="-1">6. 清空 DNS 设置（恢复为自动获取） <a class="header-anchor" href="#_6-清空-dns-设置-恢复为自动获取" aria-label="Permalink to &quot;6. 清空 DNS 设置（恢复为自动获取）&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo networksetup -setdnsservers &lt;服务名称&gt; empty</span></span></code></pre></div><h3 id="_7-验证设置" tabindex="-1">7. 验证设置 <a class="header-anchor" href="#_7-验证设置" aria-label="Permalink to &quot;7. 验证设置&quot;">​</a></h3><p>设置完成后，请使用以下命令检查是否成功：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>networksetup -getdnsservers &quot;USB WIFI&quot;</span></span></code></pre></div><p>或者使用更通用的系统命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>scutil --dns</span></span></code></pre></div>`,45)])])}const g=s(p,[["render",i]]);export{u as __pageData,g as default};
